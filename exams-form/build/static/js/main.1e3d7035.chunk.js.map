{"version":3,"sources":["components/Confirmation.js","components/ExamForm.js","components/Title.js","components/Home.js","GlobalStyles.js","App.js","index.js"],"names":["Confirmation","Wrapper","styled","div","Form","form","ColumnContainer","RowContainer","CourseContainer","TestContainer","Label","label","Input","input","Textarea","textarea","Button","button","H1","h1","H2","p","ExamForm","resArray","history","useHistory","tests","examDate","startTime","endTime","instructions","examDetails","course","number","section","testInfo","useState","name","email","examInfo","Inputs","setInputs","handleAddCourse","ev","preventDefault","newData","push","onSubmit","forEach","elem","el","timestamp","Date","now","toString","console","log","axios","post","then","res","status","window","alert","htmlFor","id","placeholder","value","onChange","nameValue","target","handleNameInput","type","emailValue","handleEmailInput","map","index","courseIndex","courseValues","handleCourseInput","numberValues","handleNumberInput","sectionValues","handleSectionInput","Table","responsive","size","style","width","test","i","min","max","testIndex","dateValues","handleDateUpdate","startTimeValues","handleStartTimeInput","endTimeValues","handleEndTimeInput","rows","cols","instructionsValues","handleInstructionsInput","onClick","handleAddTest","marginLeft","Title","Home","createGlobalStyle","App","GlobalStyles","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e3d7035.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Confirmation = () => {\r\n  return (\r\n    <div>\r\n      <p>Thank you for submitting the form. </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ExamForm = () => {\r\n  let resArray = [];\r\n  const history = useHistory();\r\n  const tests = {\r\n    examDate: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const examDetails = {\r\n    course: \"\",\r\n    number: \"\",\r\n    section: \"\",\r\n    testInfo: [tests],\r\n  };\r\n\r\n  const [Inputs, setInputs] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    examInfo: [examDetails],\r\n  });\r\n\r\n  const handleNameInput = (ev) => {\r\n    let nameValue = { ...Inputs };\r\n    nameValue.name = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(nameValue);\r\n  };\r\n\r\n  const handleEmailInput = (ev) => {\r\n    let emailValue = { ...Inputs };\r\n    emailValue.email = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(emailValue);\r\n  };\r\n\r\n  const handleAddCourse = (ev) => {\r\n    ev.preventDefault();\r\n    let newData = { ...Inputs };\r\n    newData.examInfo.push(examDetails);\r\n    // console.log(newData);\r\n    setInputs(newData);\r\n  };\r\n\r\n  const handleAddTest = (ev, courseIndex) => {\r\n    ev.preventDefault();\r\n    let newData = { ...Inputs };\r\n    // console.log(courseIndex, testIndex);\r\n    newData.examInfo[courseIndex].testInfo.push(tests);\r\n    // console.log(newData);\r\n    setInputs(newData);\r\n  };\r\n\r\n  const handleCourseInput = (ev, courseIndex) => {\r\n    // console.log(ev.target.value, courseIndex);\r\n    let courseValues = { ...Inputs };\r\n    courseValues.examInfo[courseIndex].course = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(courseValues);\r\n  };\r\n\r\n  const handleNumberInput = (ev, courseIndex) => {\r\n    // console.log(ev.target.value, courseIndex);\r\n    let numberValues = { ...Inputs };\r\n    numberValues.examInfo[courseIndex].number = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(numberValues);\r\n  };\r\n\r\n  const handleSectionInput = (ev, courseIndex) => {\r\n    // console.log(ev.target.value, courseIndex);\r\n    let sectionValues = { ...Inputs };\r\n    sectionValues.examInfo[courseIndex].section = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(sectionValues);\r\n  };\r\n\r\n  const handleDateUpdate = (ev, courseIndex, testIndex) => {\r\n    // console.log(ev.target.value, courseIndex, testIndex);\r\n    let dateValues = { ...Inputs };\r\n    dateValues.examInfo[courseIndex].testInfo[testIndex].examDate =\r\n      ev.target.value;\r\n    setInputs(dateValues);\r\n  };\r\n\r\n  const handleStartTimeInput = (ev, courseIndex, testIndex) => {\r\n    let startTimeValues = { ...Inputs };\r\n    startTimeValues.examInfo[courseIndex].testInfo[testIndex].startTime =\r\n      ev.target.value;\r\n    setInputs(startTimeValues);\r\n  };\r\n\r\n  const handleEndTimeInput = (ev, courseIndex, testIndex) => {\r\n    let endTimeValues = { ...Inputs };\r\n    endTimeValues.examInfo[courseIndex].testInfo[testIndex].endTime =\r\n      ev.target.value;\r\n    setInputs(endTimeValues);\r\n  };\r\n\r\n  const handleInstructionsInput = (ev, courseIndex, testIndex) => {\r\n    let instructionsValues = { ...Inputs };\r\n    instructionsValues.examInfo[courseIndex].testInfo[testIndex].instructions =\r\n      ev.target.value;\r\n    setInputs(instructionsValues);\r\n  };\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    Inputs.examInfo.forEach((elem) => {\r\n      return elem.testInfo.forEach((el) => {\r\n        return resArray.push({\r\n          timestamp: new Date(Date.now()).toString(),\r\n          name: Inputs.name,\r\n          email: Inputs.email,\r\n          course: elem.course + \" \" + elem.number + \" \" + elem.section,\r\n          examDate: el.examDate,\r\n          startTime: el.startTime,\r\n          endTime: el.endTime,\r\n          instructions: el.instructions,\r\n        });\r\n      });\r\n    });\r\n    console.log(resArray);\r\n    axios\r\n      .post(\r\n        \"https://sheet.best/api/sheets/f1a3d643-ae9e-4a02-83ee-5e7cd9ef546e\",\r\n        resArray\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          history.push(\"/confirmation\");\r\n        } else {\r\n          window.alert(\"Error in submission! Please try again.\");\r\n        }\r\n      });\r\n\r\n    // fetch(\"/send-tests\", {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     Accept: \"application/json\",\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify(Inputs),\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((res) => console.log(res))\r\n    //   .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form onSubmit={handleSubmit}>\r\n        <RowContainer>\r\n          <ColumnContainer>\r\n            <Label htmlFor=\"name\">Name: </Label>\r\n            <Input\r\n              id=\"name\"\r\n              placeholder=\"First name and last name\"\r\n              value={Inputs.name}\r\n              onChange={(ev) => handleNameInput(ev)}\r\n            />\r\n          </ColumnContainer>\r\n          <ColumnContainer>\r\n            <Label htmlFor=\"email\">Email: </Label>\r\n            <Input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Your email\"\r\n              value={Inputs.email}\r\n              onChange={(ev) => handleEmailInput(ev)}\r\n            />\r\n          </ColumnContainer>\r\n        </RowContainer>\r\n\r\n        {Inputs.examInfo.map((course, index) => {\r\n          // console.log(course);\r\n          return (\r\n            <CourseContainer key={\"d\" + index}>\r\n              <H1 key={\"a\" + index}>Course {index + 1}</H1>\r\n              <RowContainer>\r\n                <ColumnContainer>\r\n                  <Label htmlFor=\"course\" key={\"b\" + index}>\r\n                    Course Code:\r\n                  </Label>\r\n                  <Input\r\n                    key={\"c\" + index}\r\n                    id=\"course\"\r\n                    value={Inputs.examInfo[index].course}\r\n                    onChange={(ev) => handleCourseInput(ev, index)}\r\n                  />\r\n                </ColumnContainer>\r\n                <ColumnContainer>\r\n                  <Label>Course Number:</Label>\r\n                  <Input\r\n                    value={Inputs.examInfo[index].number}\r\n                    onChange={(ev) => handleNumberInput(ev, index)}\r\n                  />\r\n                </ColumnContainer>\r\n                <ColumnContainer>\r\n                  <Label>Section:</Label>\r\n                  <Input\r\n                    value={Inputs.examInfo[index].section}\r\n                    onChange={(ev) => handleSectionInput(ev, index)}\r\n                  />\r\n                </ColumnContainer>\r\n              </RowContainer>\r\n              <Table\r\n                responsive=\"xl\"\r\n                size=\"sm\"\r\n                style={{ width: \"100% !important\" }}\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th />\r\n                    <th />\r\n                    <th />\r\n                    <th />\r\n                    <th />\r\n                  </tr>\r\n                </thead>\r\n\r\n                {course.testInfo.map((test, i) => {\r\n                  return (\r\n                    <TestContainer>\r\n                      <tr>\r\n                        <H2>Test {i + 1}</H2>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Label>Exam Date</Label>\r\n                          <p />\r\n                          <Input\r\n                            type=\"date\"\r\n                            value={Inputs.examInfo[index].testInfo[i].examDate}\r\n                            min={Date.now()}\r\n                            max=\"2030-12-31\"\r\n                            onChange={(ev) => handleDateUpdate(ev, index, i)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <Label>Test Start:</Label>\r\n                          <p />\r\n                          <Input\r\n                            value={Inputs.examInfo[index].testInfo[i].startTime}\r\n                            type=\"time\"\r\n                            min=\"07:00\"\r\n                            max=\"24:00\"\r\n                            onChange={(ev) =>\r\n                              handleStartTimeInput(ev, index, i)\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <Label>Test End:</Label>\r\n                          <p></p>\r\n                          <Input\r\n                            type=\"time\"\r\n                            value={Inputs.examInfo[index].testInfo[i].endTime}\r\n                            min=\"07:00\"\r\n                            max=\"24:00\"\r\n                            onChange={(ev) => handleEndTimeInput(ev, index, i)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <Label>Instructions</Label>\r\n                          <p />\r\n                          <Textarea\r\n                            rows=\"3\"\r\n                            cols=\"25\"\r\n                            placeholder=\"Exam instructions, formula sheet, open/close book etc.\"\r\n                            value={\r\n                              Inputs.examInfo[index].testInfo[i].instructions\r\n                            }\r\n                            onChange={(ev) =>\r\n                              handleInstructionsInput(ev, index, i)\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <br /> <Button>Remove test</Button>\r\n                        </td>\r\n                      </tr>\r\n                    </TestContainer>\r\n                  );\r\n                })}\r\n              </Table>\r\n              <Button\r\n                onClick={(ev) => handleAddTest(ev, index)}\r\n                style={{ marginLeft: \"30px\" }}\r\n              >\r\n                + Add another test\r\n              </Button>\r\n              <Button onClick={handleAddCourse}> + Add another course</Button>\r\n              {/* <Button> - Remove this course</Button> */}\r\n            </CourseContainer>\r\n          );\r\n        })}\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 1rem;\r\n  background-color: white;\r\n  /* border-left: 0.25px solid gray;\r\n  border-right: 0.25px solid gray; */\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ColumnContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  margin-inline-end: 20px;\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst CourseContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n  .table > thead > tr > th {\r\n    border-bottom: none !important;\r\n  }\r\n  .table {\r\n    width: 100% !important;\r\n  }\r\n  td {\r\n    width: 25% !important;\r\n  }\r\n  td,\r\n  tr,\r\n  th,\r\n  thead {\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst TestContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* padding: 10px; */\r\n  border-radius: 10px;\r\n  margin-left: 10px;\r\n  width: inherit;\r\n`;\r\nconst Label = styled.label`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  padding: 5px 5px 5px 0px;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 50%;\r\n  /* margin: 10px; */\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 1rem;\r\n  padding: 5px;\r\n  border: 0.5px solid #cfcfcf;\r\n  border-radius: 5px;\r\n  width: 90%;\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  margin-bottom: 15px;\r\n  max-width: 500px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 1rem;\r\n  border: 0.5px solid #cfcfcf;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: fit-content;\r\n  padding: 10px;\r\n  color: white;\r\n  background-color: #7a1d2e;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 1rem;\r\n  margin: 10px;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  color: #912338;\r\n  font-size: 2em;\r\n  text-transform: none;\r\n  letter-spacing: 1px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst H2 = styled.p`\r\n  color: #912338;\r\n  font-size: 1.5em;\r\n  text-transform: none;\r\n  letter-spacing: 1px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport default ExamForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <Wrapper>\r\n      <h1>Exam INFORMATION Form for ACSD</h1>\r\n      <p>This form gathers high level information for all in-person exams.</p>\r\n\r\n      <p>\r\n        Please complete this Exam Information Form by 10 days before each exam.\r\n        If you have missed this date, please contact acsdexam@concordia.ca to\r\n        check if the exam can be accommodated.\r\n      </p>\r\n\r\n      <p>\r\n        Whenever you are ready, and at least 10 days before your exam, you must\r\n        NECESSARILY complete the Exam Upload Form, with specific details of your\r\n        exam. (http://bit.ly/ColeEUF)\r\n      </p>\r\n\r\n      <p>\r\n        If, after completing this form, your exam dates or exam information\r\n        changes, please contact acsdexam@concordia.ca as early as possible.\r\n      </p>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #93243b;\r\n  color: white;\r\n  p {\r\n    color: white;\r\n    line-height: 2;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n  h1,\r\n  h2 {\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n  padding: 1rem;\r\n`;\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ExamForm from \"./ExamForm\";\r\nimport Title from \"./Title\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Wrapper>\r\n      {\" \"}\r\n      <Title />\r\n      <ExamForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80vw;\r\n`;\r\n\r\nexport default Home;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    /* *,\r\n    *:before,\r\n    *:after {\r\n        box-sizing: border-box;   \r\n        -webkit-font-smoothing: antialiased;\r\n    } */\r\n    body { \r\n        margin: 0\r\n    }\r\n    body { \r\n        scroll-behavior:smooth\r\n    }\r\n    html, body, div,\r\n    input, button, select, option,\r\n    h1, h2, h3, h4, h5, h6,\r\n    text {\r\n        font-family: \"Montserrat\", sans-serif;\r\n    }\r\n    html, body {\r\n        max-width: 100vw;\r\n    }\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    caption,\r\n    article, aside, canvas, details, embed,\r\n    figure, figcaption, footer, header, hgroup,\r\n    menu, nav, output, ruby, section, summary,\r\n    time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n        font-size: 100%;\r\n        vertical-align: baseline; \r\n    }\r\n    /* HTML5 display-role reset for older browsers */\r\n    article, aside, details, figcaption, figure,\r\n    footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n    body {\r\n        line-height: 1;\r\n    }\r\n    ol, ul {\r\n        list-style: none;\r\n    }\r\n    blockquote, q {\r\n        quotes: none;\r\n    }\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n    h1,\r\n    h2,\r\n    h3,\r\n    label,\r\n    button {\r\n        font-family: 'Montserrat';\r\n    }\r\n    p{\r\n        font-size: 1em;\r\n  text-transform: uppercase;\r\n  margin: 0 0 2em 0;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  color: gray;\r\n  text-transform: none;\r\n  margin-block-start: 0.5em;\r\n  margin-block-end: 0.5em;\r\n    }\r\n    p,\r\n    a,\r\n    li,\r\n    blockquote,\r\n    input {\r\n        font-family: 'Montserrat';\r\n    }\r\n    button {\r\n        border: none;\r\n        text-decoration: none;\r\n        outline: none;\r\n    }\r\n    table {\r\n    border-collapse: collapse;\r\n    width: inherit;\r\n    padding: 8px;\r\n  }\r\n  td,\r\n  th {\r\n    border-bottom: 1px solid #dddddd;\r\n    text-align: left;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n  }\r\n  tr {\r\n    border-bottom: 1px solid gray;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Confirmation from \"./components/Confirmation\";\nimport Home from \"./components/Home\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <GlobalStyles />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/confirmation\">\n            <Confirmation />\n          </Route>\n        </Switch>\n      </Router>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f4f4f4;\n  overflow-x: hidden;\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}