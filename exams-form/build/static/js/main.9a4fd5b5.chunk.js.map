{"version":3,"sources":["GlobalStyles.js","components/ExamForm.js","components/Title.js","images/bg.jpg","App.js","index.js"],"names":["createGlobalStyle","Wrapper","styled","div","Form","form","CourseContainer","TestContainer","Label","label","Input","input","Textarea","textarea","Button","button","H1","h1","H2","h2","ExamForm","resArray","tests","examDate","startTime","endTime","instructions","examDetails","course","testInfo","useState","name","email","examInfo","Inputs","setInputs","handleAddCourse","ev","preventDefault","newData","push","onSubmit","forEach","elem","el","timestamp","Date","now","toString","axios","post","then","res","console","log","htmlFor","id","placeholder","value","onChange","nameValue","target","handleNameInput","type","emailValue","handleEmailInput","map","index","courseIndex","courseValues","handleCourseInput","test","i","min","max","testIndex","dateValues","handleDateUpdate","startTimeValues","handleStartTimeInput","endTimeValues","handleEndTimeInput","rows","cols","instructionsValues","handleInstructionsInput","style","display","onClick","handleAddTest","marginLeft","Title","bg","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a4fd5b5.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    /* *,\r\n    *:before,\r\n    *:after {\r\n        box-sizing: border-box;   \r\n        -webkit-font-smoothing: antialiased;\r\n    } */\r\n    body { \r\n        margin: 0\r\n    }\r\n    body { \r\n        scroll-behavior:smooth\r\n    }\r\n    html, body, div,\r\n    input, button, select, option,\r\n    h1, h2, h3, h4, h5, h6,\r\n    text {\r\n        font-family: \"Montserrat\", sans-serif;\r\n    }\r\n    html, body {\r\n        max-width: 100vw;\r\n    }\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    caption,\r\n    article, aside, canvas, details, embed,\r\n    figure, figcaption, footer, header, hgroup,\r\n    menu, nav, output, ruby, section, summary,\r\n    time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n        font-size: 100%;\r\n        vertical-align: baseline; \r\n    }\r\n    /* HTML5 display-role reset for older browsers */\r\n    article, aside, details, figcaption, figure,\r\n    footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n    body {\r\n        line-height: 1;\r\n    }\r\n    ol, ul {\r\n        list-style: none;\r\n    }\r\n    blockquote, q {\r\n        quotes: none;\r\n    }\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n    h1,\r\n    h2,\r\n    h3,\r\n    label,\r\n    button {\r\n        font-family: 'Montserrat';\r\n    }\r\n    p{\r\n        font-size: 1em;\r\n  text-transform: uppercase;\r\n  margin: 0 0 2em 0;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  color: gray;\r\n  text-transform: none;\r\n  margin-block-start: 0.5em;\r\n  margin-block-end: 0.5em;\r\n    }\r\n    p,\r\n    a,\r\n    li,\r\n    blockquote,\r\n    input {\r\n        font-family: 'Montserrat';\r\n    }\r\n    button {\r\n        border: none;\r\n        text-decoration: none;\r\n        outline: none;\r\n    }\r\n    table {\r\n    border-collapse: collapse;\r\n    width: inherit;\r\n    padding: 8px;\r\n  }\r\n  td,\r\n  th {\r\n    border-bottom: 1px solid #dddddd;\r\n    text-align: left;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n  }\r\n  tr {\r\n    border-bottom: 1px solid gray;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst ExamForm = () => {\r\n  let resArray = [];\r\n  const tests = {\r\n    examDate: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const examDetails = {\r\n    course: \"\",\r\n    testInfo: [tests],\r\n  };\r\n\r\n  const [Inputs, setInputs] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    examInfo: [examDetails],\r\n  });\r\n\r\n  const handleNameInput = (ev) => {\r\n    let nameValue = { ...Inputs };\r\n    nameValue.name = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(nameValue);\r\n  };\r\n\r\n  const handleEmailInput = (ev) => {\r\n    let emailValue = { ...Inputs };\r\n    emailValue.email = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(emailValue);\r\n  };\r\n\r\n  const handleAddCourse = (ev) => {\r\n    ev.preventDefault();\r\n    let newData = { ...Inputs };\r\n    newData.examInfo.push(examDetails);\r\n    // console.log(newData);\r\n    setInputs(newData);\r\n  };\r\n\r\n  const handleAddTest = (ev, courseIndex) => {\r\n    ev.preventDefault();\r\n    let newData = { ...Inputs };\r\n    // console.log(courseIndex, testIndex);\r\n    newData.examInfo[courseIndex].testInfo.push(tests);\r\n    // console.log(newData);\r\n    setInputs(newData);\r\n  };\r\n\r\n  const handleCourseInput = (ev, courseIndex) => {\r\n    // console.log(ev.target.value, courseIndex);\r\n    let courseValues = { ...Inputs };\r\n    courseValues.examInfo[courseIndex].course = ev.target.value;\r\n    // console.log(courseValues);\r\n    setInputs(courseValues);\r\n  };\r\n\r\n  const handleDateUpdate = (ev, courseIndex, testIndex) => {\r\n    // console.log(ev.target.value, courseIndex, testIndex);\r\n    let dateValues = { ...Inputs };\r\n    dateValues.examInfo[courseIndex].testInfo[testIndex].examDate =\r\n      ev.target.value;\r\n    setInputs(dateValues);\r\n  };\r\n\r\n  const handleStartTimeInput = (ev, courseIndex, testIndex) => {\r\n    let startTimeValues = { ...Inputs };\r\n    startTimeValues.examInfo[courseIndex].testInfo[testIndex].startTime =\r\n      ev.target.value;\r\n    setInputs(startTimeValues);\r\n  };\r\n\r\n  const handleEndTimeInput = (ev, courseIndex, testIndex) => {\r\n    let endTimeValues = { ...Inputs };\r\n    endTimeValues.examInfo[courseIndex].testInfo[testIndex].endTime =\r\n      ev.target.value;\r\n    setInputs(endTimeValues);\r\n  };\r\n\r\n  const handleInstructionsInput = (ev, courseIndex, testIndex) => {\r\n    let instructionsValues = { ...Inputs };\r\n    instructionsValues.examInfo[courseIndex].testInfo[testIndex].instructions =\r\n      ev.target.value;\r\n    setInputs(instructionsValues);\r\n  };\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    Inputs.examInfo.forEach((elem) => {\r\n      return elem.testInfo.forEach((el) => {\r\n        return resArray.push({\r\n          timestamp: new Date(Date.now()).toString(),\r\n          name: Inputs.name,\r\n          email: Inputs.email,\r\n          course: elem.course,\r\n          examDate: el.examDate,\r\n          startTime: el.startTime,\r\n          endTime: el.endTime,\r\n          instructions: el.instructions,\r\n        });\r\n      });\r\n    });\r\n\r\n    axios\r\n      .post(\r\n        \"https://sheet.best/api/sheets/f1a3d643-ae9e-4a02-83ee-5e7cd9ef546e\",\r\n        resArray\r\n      )\r\n      .then((res) => console.log(res));\r\n\r\n    // fetch(\"/send-tests\", {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     Accept: \"application/json\",\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify(Inputs),\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((res) => console.log(res))\r\n    //   .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name</Label>\r\n        <Input\r\n          id=\"name\"\r\n          placeholder=\"First name and last name\"\r\n          value={Inputs.name}\r\n          onChange={(ev) => handleNameInput(ev)}\r\n        />\r\n        <Label htmlFor=\"email\">Email: </Label>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Your email\"\r\n          value={Inputs.email}\r\n          onChange={(ev) => handleEmailInput(ev)}\r\n        />\r\n        {Inputs.examInfo.map((course, index) => {\r\n          // console.log(course);\r\n          return (\r\n            <CourseContainer key={\"d\" + index}>\r\n              <H1 key={\"a\" + index}>Course {index + 1}</H1>\r\n              <Label htmlFor=\"course\" key={\"b\" + index}>\r\n                Course\r\n              </Label>\r\n              <Input\r\n                key={\"c\" + index}\r\n                id=\"course\"\r\n                value={Inputs.examInfo[index].course}\r\n                onChange={(ev) => handleCourseInput(ev, index)}\r\n              />\r\n              {course.testInfo.map((test, i) => {\r\n                return (\r\n                  <TestContainer>\r\n                    <H2>Test {i + 1}</H2>\r\n                    <Label>Exam Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      value={Inputs.examInfo[index].testInfo[i].examDate}\r\n                      min={Date.now()}\r\n                      max=\"2030-12-31\"\r\n                      onChange={(ev) => handleDateUpdate(ev, index, i)}\r\n                    />\r\n                    <Label>Test Start:</Label>\r\n                    <Input\r\n                      value={Inputs.examInfo[index].testInfo[i].startTime}\r\n                      type=\"time\"\r\n                      min=\"07:00\"\r\n                      max=\"24:00\"\r\n                      onChange={(ev) => handleStartTimeInput(ev, index, i)}\r\n                    />\r\n                    <Label>Test End:</Label>\r\n                    <Input\r\n                      type=\"time\"\r\n                      value={Inputs.examInfo[index].testInfo[i].endTime}\r\n                      min=\"07:00\"\r\n                      max=\"24:00\"\r\n                      onChange={(ev) => handleEndTimeInput(ev, index, i)}\r\n                    />\r\n                    <Label>Instructions</Label>\r\n                    <Textarea\r\n                      rows=\"4\"\r\n                      cols=\"50\"\r\n                      placeholder=\"Exam instructions, formula sheet, open/close book etc.\"\r\n                      value={Inputs.examInfo[index].testInfo[i].instructions}\r\n                      onChange={(ev) => handleInstructionsInput(ev, index, i)}\r\n                    />\r\n\r\n                    <Button style={{ display: i > 0 ? \"block\" : \"none\" }}>\r\n                      {\" \"}\r\n                      - Remove this test\r\n                    </Button>\r\n                  </TestContainer>\r\n                );\r\n              })}\r\n              <Button\r\n                onClick={(ev) => handleAddTest(ev, index)}\r\n                style={{ marginLeft: \"30px\" }}\r\n              >\r\n                + Add another test\r\n              </Button>\r\n              <Button onClick={handleAddCourse}> + Add another course</Button>\r\n              {/* <Button> - Remove this course</Button> */}\r\n            </CourseContainer>\r\n          );\r\n        })}\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 2rem;\r\n  width: 80vw;\r\n  background-color: white;\r\n  border-left: 0.25px solid gray;\r\n  border-right: 0.25px solid gray;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CourseContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  width: 60vw;\r\n  border-radius: 10px;\r\n  /* border: 0.5px solid #d4d4d4; */\r\n  /* box-shadow: 0px 0px 12px -3px rgba(122, 29, 46, 0.75); */\r\n  margin: 10px;\r\n`;\r\n\r\nconst TestContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50vw;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n`;\r\nconst Label = styled.label`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  padding: 5px 5px 5px 0px;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 50%;\r\n  margin: 0px 10px 10px 0px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 1rem;\r\n  padding: 5px;\r\n  border: 0.5px solid #cfcfcf;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  margin-bottom: 15px;\r\n  max-width: 500px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 1rem;\r\n  border: 0.5px solid #cfcfcf;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: fit-content;\r\n  padding: 15px;\r\n  color: white;\r\n  background-color: #7a1d2e;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  color: #912338;\r\n  font-size: 2em;\r\n  text-transform: none;\r\n  letter-spacing: 1px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  color: #912338;\r\n  font-size: 1.5em;\r\n  text-transform: none;\r\n  letter-spacing: 1px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport default ExamForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <Wrapper>\r\n      <h1>Exam INFORMATION Form for ACSD</h1>\r\n      <p>This form gathers high level information for all in-person exams.</p>\r\n\r\n      <p>\r\n        Please complete this Exam Information Form by 10 days before each exam.\r\n        If you have missed this date, please contact acsdexam@concordia.ca to\r\n        check if the exam can be accommodated.\r\n      </p>\r\n\r\n      <p>\r\n        Whenever you are ready, and at least 10 days before your exam, you must\r\n        NECESSARILY complete the Exam Upload Form, with specific details of your\r\n        exam. (http://bit.ly/ColeEUF)\r\n      </p>\r\n\r\n      <p>\r\n        If, after completing this form, your exam dates or exam information\r\n        changes, please contact acsdexam@concordia.ca as early as possible.\r\n      </p>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #93243b;\r\n  color: white;\r\n  p {\r\n    color: white;\r\n    line-height: 2;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n  h1,\r\n  h2 {\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n  padding: 2rem;\r\n  width: 80vw;\r\n`;\r\n\r\nexport default Title;\r\n","export default __webpack_public_path__ + \"static/media/bg.64957151.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport ExamForm from \"./components/ExamForm\";\nimport Title from \"./components/Title\";\nimport bg from \"./images/bg.jpg\";\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <GlobalStyles />\n      <Title />\n      <ExamForm />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  overflow-x: hidden;\n  height: 100vh;\n  background-image: url(${bg});\n  object-fit: fill;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}